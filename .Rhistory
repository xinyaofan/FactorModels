data=sim1fact3(n=2,d=30,param=param,fam=fam)
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
set.seed(1234)
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
data=sim1fact3(n=2,d=30,param=param,fam=fam)
library(VineCopula)
set.seed(1234)
data=sim1fact3(n=2,d=30,param=param,fam=fam)
sim1fact4<-function(n,d,param,fam){
vv = runif(n)
yy = matrix(0, n, d)
for (j in 1:d) {
jj=c(2*j-1,2*j)
th = param[jj]
for (i in 1:n) {
v1 = vv[i]
qq = runif(1)
if(fam==4){
yy[i,j]=qcondgum(qq, v1, th[1])
}else if(fam==5){
yy[i,j]=qcondfrk(qq,v1,th[1])
}else if(fam==2){
yy[i,j]=qcondbvtcop(qq,v1,cpar=th[1],df=5)
}
}
}
return(list("dat"=yy,"vlat"=vv))
}
set.seed(1234)
data2=sim1fact4(n=2,d=30,param=param,fam=fam)
View(data2)
View(data)
View(data2)
View(data)
View(data2)
View(data)
warnings()
View(data)
dat1=data$dat
dat2=data2$dat
View(dat2)
View(dat1)
dif=dat1-dat2
View(dif)
find_start<-function(fam,tau,df){
d=length(fam)
st=rep(0,2*d)
for(i in 1:d){
if(fam[i]==4){
st[2*i-1]=gum.tau2cpar(tau=tau[i])
}else if(fam[i]==5){
st[2*i-1]=BiCopTau2Par(family=5,tau=tau[i])
}else if(fam[i]==2){
st[2*i-1]=BiCopTau2Par(family=2,tau=tau[i])
st[2*i]=df
}else if(fam[i]==17){
st[c(2*i-1,2*i)]=bb1.tau2eqlm(tau[i])[c(1,2)]
}else if(fam[i]==7){
st[c(2*i-1,2*i)]=bb1.tau2eqlm(tau[i])[c(1,2)]
}else if(fam[i]==10|fam[i]==20)
{
st[c(2*i-1,2*i)]=c(4.5,0.5)
}
#print(i)
}
return(st)
}
#return the optimization upper and lower bound for
#the parameters
return_bound<-function(familyvec){
n=length(familyvec)
UB1=rep(NA,n)
LB1=rep(NA,n)
UB2=rep(NA,n)
LB2=rep(NA,n)
for(i in 1:n){
tem=familyvec[i]
if(tem==2){
LB1[i]=-0.99
UB1[i]=0.99
LB2[i]=2.01
UB2[i]=5000
} else if (tem==17|tem==7) {
LB1[i]=0
UB1[i]=7
LB2[i]=1
UB2[i]=7
} else if (tem==40){
LB1[i]=-8
UB1[i]=-1
LB2[i]=-1
UB2[i]=-1e-4
} else if (tem==1) {
LB1[i]=-0.99
UB1[i]=0.99
LB2[i]=0
UB2[i]=0
} else if (tem==5){
LB1[i]=-99.99
UB1[i]=99.99
LB2[i]=0
UB2[i]=0
} else if(tem==20){
UB1[i]=8
UB2[i]=1
LB1[i]=1
LB2[i]=0.00001
} else if(tem==10){
UB1[i]=8
LB1[i]=1
UB2[i]=1
LB2[i]=0.00001
} else if(tem==14){
UB1[i]=100
LB1[i]=1
UB2[i]=0
LB2[i]=0
}else if(tem==4){
UB1[i]=50
LB1[i]=1
UB2[i]=0
LB2[i]=0
}
}
return(list(UB1=UB1,UB2=UB2,LB1=LB1,LB2=LB2))
}
simu1<-function(nsize,n,d,seed=1234){
set.seed(seed)
res_list=list()
vlat_list=list()
thv_mat=matrix(NA,nsize,2*d)
fam_mat=matrix(NA,nsize,d)
proxyMean_list=list()
mlpx1_mat=matrix(NA,nsize,2*d)
mlpx2_mat=matrix(NA,nsize,2*d)
udata_list=list()
LB_list=list()
UB_list=list()
ifixed_list=list()
start_list=list()
for(k in 1:nsize){
param=c(rbind(c(runif(d/3,1.67,5),runif(d/3,4.2,21.5),
runif(d/3,0.59,0.95)),
c(rep(0,2*d/3),c(rep(5,d/3)))))
thv_mat[k,]=param
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
data=sim1fact4(n=n,d=d,param=param,fam=fam)
udata=data$dat
vlat=data$vlat
udata_list[[k]]=udata
vlat_list[[k]]=vlat
proxyMean=uscore(apply(udata,1,mean))
proxyMean_list[[k]]=proxyMean
# fam=rep(NA,d)
# par=rep(NA,d)
# par2=rep(NA,d)
res=apply(udata,2,function(x)
{BiCopSelect(x,proxyMean,familyset = c(1,2,4,5,7,10,20,14,17))})
fam=sapply(res,function(x) x$family)
par=sapply(res,function(x) x$par)
par2=sapply(res,function(x) x$par2)
fam_mat[k,]=fam
#  		fa1=factanal(covmat = cor(nscore(udata)),factors=1)
# 					 		load1=c(fa1$loadings)
# 					 		load1.tau=bvn.cpar2tau(load1)
df=mean(par2[which(fam==2)])
start=c(rbind(par,par2))
start[which(fam==2)*2]=df
start_list[[k]]=start
#start=find_start(fam=fam,tau=load1.tau,df=df)
ifixed=c(rbind(rep(F,d),rep(T,d)))
ifixed[2*which(fam==17|fam==7)]=F
ifixed_list[[k]]=ifixed
tem=return_bound(familyvec = fam)
UB=c(rbind(tem$UB1,tem$UB2))
LB=c(rbind(tem$LB1,tem$LB2))
UB_list[[k]]=UB
LB_list[[k]]=LB
dstruct=list(udata=udata,lat=proxyMean,fam=fam)
out1=pdhessminb(start,f901fproxynllk2,
ifixed =ifixed,
dstruct=dstruct,
LB=LB,UB=UB,
mxiter=30,eps=1.e-4,iprint=T)
mlpx1=out1$parmin
# proxyNew=latUpdateOnefct2(th=mlpx1,
# 													udata=udata,
# 													nq=25,xl=xl,wl=wl,
# 													family=fam)
# mlpx1=out2$mlpx1
#proxyMean=out1$proxyMean
# dstruct=list(udata=udata,lat=proxyNew,fam=fam)
# out2=pdhessminb(start,f901fproxynllk2,
# 								ifixed =ifixed,
# 								dstruct=dstruct,
# 								LB=LB,UB=UB,
# 								mxiter=30,eps=1.e-4,iprint=T)
# mlpx2_mat[k,]=mlpx2
print(k)
}
#return(list(thv_mat=thv_mat))
return(list(proxyMean_list=proxyMean_list,
udata_list=udata_list,
vlat_list=vlat_list,
mlpx1_mat=mlpx1_mat,
fam_mat=fam_mat,
thv_mat=thv_mat,
ifixed_list=ifixed_list,UB_list=UB_list,
LB_list=LB_list,start_list=start_list))
}
res30=simu1(nsize=2,n=500,d=90)
d=90
param=c(rbind(c(runif(d/3,1.67,5),runif(d/3,4.2,21.5),
runif(d/3,0.59,0.95)),
c(rep(0,2*d/3),c(rep(5,d/3)))))
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
n=1000
data=sim1fact4(n=n,d=d,param=param,fam=fam)
warnings()
sim1fact4<-function(n,d,param,fam){
vv = runif(n)
yy = matrix(0, n, d)
for (j in 1:d) {
jj=c(2*j-1,2*j)
th = param[jj]
qq = runif(n)
if(fam[j]==4){
yy[,j]=qcondgum(qq, vv, th[1])
}else if(fam[j]==5){
yy[,j]=qcondfrk(qq,vv,th[1])
}else if(fam[j]==2){
yy[,j]=qcondbvtcop(qq,vv,cpar=th[1],df=5)
}
}
return(list("dat"=yy,"vlat"=vv))
}
d=30
param=c(rbind(c(runif(d/3,1.67,5),runif(d/3,4.2,21.5),
runif(d/3,0.59,0.95)),
c(rep(0,2*d/3),c(rep(5,d/3)))))
thv_mat[k,]=param
param=c(rbind(c(runif(d/3,1.67,5),runif(d/3,4.2,21.5),
runif(d/3,0.59,0.95)),
c(rep(0,2*d/3),c(rep(5,d/3)))))
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
data=sim1fact4(n=2,d=d,param=param,fam=fam)
data2=sim1fact3(n=2,d=d,param=param,fam=fam)
dat1=data$dat
dat2=data2$dat
dif=dat-dat2
dif=dat1-dat2
View(dif)
set.seed(1234)
dat1=sim1fact3(n=2,d=d,param=param,fam=fam)$data
set.seed(1234)
dat2=sim1fact4(n=2,d=d,param=param,fam=fam)$data
dif=dat1-dat2
set.seed(1234)
dat1=sim1fact3(n=2,d=d,param=param,fam=fam)$data
set.seed(1234)
dat1=sim1fact3(n=2,d=d,param=param,fam=fam)$dat
set.seed(1234)
dat2=sim1fact4(n=2,d=d,param=param,fam=fam)$dat
dif=dat1-dat2
dif
d=90
n=1000
param=c(rbind(c(runif(d/3,1.67,5),runif(d/3,4.2,21.5),
runif(d/3,0.59,0.95)),
c(rep(0,2*d/3),c(rep(5,d/3)))))
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
data=sim1fact4(n=n,d=d,param=param,fam=fam)
simu1<-function(nsize,n,d,seed=1234){
set.seed(seed)
res_list=list()
vlat_list=list()
thv_mat=matrix(NA,nsize,2*d)
fam_mat=matrix(NA,nsize,d)
proxyMean_list=list()
mlpx1_mat=matrix(NA,nsize,2*d)
mlpx2_mat=matrix(NA,nsize,2*d)
udata_list=list()
LB_list=list()
UB_list=list()
ifixed_list=list()
start_list=list()
for(k in 1:nsize){
param=c(rbind(c(runif(d/3,1.67,5),runif(d/3,4.2,21.5),
runif(d/3,0.59,0.95)),
c(rep(0,2*d/3),c(rep(5,d/3)))))
thv_mat[k,]=param
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
data=sim1fact4(n=n,d=d,param=param,fam=fam)
udata=data$dat
vlat=data$vlat
udata_list[[k]]=udata
vlat_list[[k]]=vlat
proxyMean=uscore(apply(udata,1,mean))
proxyMean_list[[k]]=proxyMean
# fam=rep(NA,d)
# par=rep(NA,d)
# par2=rep(NA,d)
res=apply(udata,2,function(x)
{BiCopSelect(x,proxyMean,familyset = c(1,2,4,5,7,10,20,14,17))})
fam=sapply(res,function(x) x$family)
par=sapply(res,function(x) x$par)
par2=sapply(res,function(x) x$par2)
fam_mat[k,]=fam
#  		fa1=factanal(covmat = cor(nscore(udata)),factors=1)
# 					 		load1=c(fa1$loadings)
# 					 		load1.tau=bvn.cpar2tau(load1)
df=mean(par2[which(fam==2)])
start=c(rbind(par,par2))
start[which(fam==2)*2]=df
start_list[[k]]=start
#start=find_start(fam=fam,tau=load1.tau,df=df)
ifixed=c(rbind(rep(F,d),rep(T,d)))
ifixed[2*which(fam==17|fam==7)]=F
ifixed_list[[k]]=ifixed
tem=return_bound(familyvec = fam)
UB=c(rbind(tem$UB1,tem$UB2))
LB=c(rbind(tem$LB1,tem$LB2))
UB_list[[k]]=UB
LB_list[[k]]=LB
dstruct=list(udata=udata,lat=proxyMean,fam=fam)
out1=pdhessminb(start,f901fproxynllk2,
ifixed =ifixed,
dstruct=dstruct,
LB=LB,UB=UB,
mxiter=30,eps=1.e-4,iprint=T)
mlpx1=out1$parmin
# proxyNew=latUpdateOnefct2(th=mlpx1,
# 													udata=udata,
# 													nq=25,xl=xl,wl=wl,
# 													family=fam)
# mlpx1=out2$mlpx1
#proxyMean=out1$proxyMean
# dstruct=list(udata=udata,lat=proxyNew,fam=fam)
# out2=pdhessminb(start,f901fproxynllk2,
# 								ifixed =ifixed,
# 								dstruct=dstruct,
# 								LB=LB,UB=UB,
# 								mxiter=30,eps=1.e-4,iprint=T)
# mlpx2_mat[k,]=mlpx2
print(k)
}
#return(list(thv_mat=thv_mat))
return(list(proxyMean_list=proxyMean_list,
udata_list=udata_list,
vlat_list=vlat_list,
mlpx1_mat=mlpx1_mat,
fam_mat=fam_mat,
thv_mat=thv_mat,
ifixed_list=ifixed_list,UB_list=UB_list,
LB_list=LB_list,start_list=start_list))
}
res30_2=simu1(nsize=2,n=500,d=90)
save(file="res30gum_sec2.RData",res30_2)
res30_2$mlpx1_mat
res30_2$proxyMean_list
res30_2$vlat_list
res30_2$mlpx1_mat
res30_2$thv_mat
res30_2$ifixed_list
res30_2$fam_mat
res30_2$start_list
simu1<-function(nsize,n,d,seed=1234){
set.seed(seed)
res_list=list()
vlat_list=list()
thv_mat=matrix(NA,nsize,2*d)
fam_mat=matrix(NA,nsize,d)
proxyMean_list=list()
mlpx1_mat=matrix(NA,nsize,2*d)
mlpx2_mat=matrix(NA,nsize,2*d)
udata_list=list()
LB_list=list()
UB_list=list()
ifixed_list=list()
start_list=list()
for(k in 1:nsize){
param=c(rbind(c(runif(d/3,1.67,5),runif(d/3,4.2,21.5),
runif(d/3,0.59,0.95)),
c(rep(0,2*d/3),c(rep(5,d/3)))))
thv_mat[k,]=param
fam=c(rep(4,d/3),rep(5,d/3),rep(2,d/3))
data=sim1fact4(n=n,d=d,param=param,fam=fam)
udata=data$dat
vlat=data$vlat
udata_list[[k]]=udata
vlat_list[[k]]=vlat
proxyMean=uscore(apply(udata,1,mean))
proxyMean_list[[k]]=proxyMean
# fam=rep(NA,d)
# par=rep(NA,d)
# par2=rep(NA,d)
res=apply(udata,2,function(x)
{BiCopSelect(x,proxyMean,familyset = c(1,2,4,5,7,10,20,14,17))})
fam=sapply(res,function(x) x$family)
par=sapply(res,function(x) x$par)
par2=sapply(res,function(x) x$par2)
fam_mat[k,]=fam
#  		fa1=factanal(covmat = cor(nscore(udata)),factors=1)
# 					 		load1=c(fa1$loadings)
# 					 		load1.tau=bvn.cpar2tau(load1)
df=mean(par2[which(fam==2)])
start=c(rbind(par,par2))
start[which(fam==2)*2]=df
start_list[[k]]=start
#start=find_start(fam=fam,tau=load1.tau,df=df)
ifixed=c(rbind(rep(F,d),rep(T,d)))
ifixed[2*which(fam==17|fam==7)]=F
ifixed_list[[k]]=ifixed
tem=return_bound(familyvec = fam)
UB=c(rbind(tem$UB1,tem$UB2))
LB=c(rbind(tem$LB1,tem$LB2))
UB_list[[k]]=UB
LB_list[[k]]=LB
dstruct=list(udata=udata,lat=proxyMean,fam=fam)
out1=pdhessminb(start,f901fproxynllk2,
ifixed =ifixed,
dstruct=dstruct,
LB=LB,UB=UB,
mxiter=30,eps=1.e-4,iprint=T)
mlpx1=out1$parmin
mlpx1_mat[k,]=mlpx1
# proxyNew=latUpdateOnefct2(th=mlpx1,
# 													udata=udata,
# 													nq=25,xl=xl,wl=wl,
# 													family=fam)
# mlpx1=out2$mlpx1
#proxyMean=out1$proxyMean
# dstruct=list(udata=udata,lat=proxyNew,fam=fam)
# out2=pdhessminb(start,f901fproxynllk2,
# 								ifixed =ifixed,
# 								dstruct=dstruct,
# 								LB=LB,UB=UB,
# 								mxiter=30,eps=1.e-4,iprint=T)
# mlpx2_mat[k,]=mlpx2
print(k)
}
#return(list(thv_mat=thv_mat))
return(list(proxyMean_list=proxyMean_list,
udata_list=udata_list,
vlat_list=vlat_list,
mlpx1_mat=mlpx1_mat,
fam_mat=fam_mat,
thv_mat=thv_mat,
ifixed_list=ifixed_list,UB_list=UB_list,
LB_list=LB_list,start_list=start_list))
}
res30_2=simu1(nsize=1000,n=500,d=90)
save(file="res30gum_sec2.RData",res30_2)
View(res30_2)
tem=res30_2$mlpx1_mat
View(tem)
thv=res30_2$thv_mat[1,1:5]
thv
getwd()
install.packages(pkgs="/Users/xinyaofan/Desktop/FactorModels_0.210513.tar.gz", type="source", repos=NULL,INSTALL_opts = '--no-lock')
load("~/Desktop/FactorModels/test.RData")
latUpdateOnefct2<- function(th,udata,nq,xl,wl,family) {
n=dim(udata)[1]
d=dim(udata)[2]
nq=length(xl)
out=.Fortran("latupdate2",as.double(th),as.integer(n),as.integer(d),
as.double(udata),as.integer(nq),as.double(xl),as.double(wl),
as.integer(family),
lat=as.double(rep(0,n)))
return(out$lat)
}
library(FactorModels)
latUpdateOnefct2<- function(th,udata,nq,xl,wl,family) {
n=dim(udata)[1]
d=dim(udata)[2]
nq=length(xl)
out=.Fortran("latupdate2",as.double(th),as.integer(n),as.integer(d),
as.double(udata),as.integer(nq),as.double(xl),as.double(wl),
as.integer(family),
lat=as.double(rep(0,n)))
return(out$lat)
}
lat_update=latUpdateOnefct2(th=mlpx1,udata=udata,
nq=25,xl=xl,wl=wl,family=fam)
lat_update
proxyNew=uscore(lat_update)
library(CopulaModel)
proxyNew=uscore(lat_update)
proxyNew[1:5]
vlat[1:5]
mean(abs(vlat-proxyNew))
dif=abs(vlat-proxyNew)
round(dif,3)
install.packages(pkgs="/Users/xinyaofan/Desktop/FactorModels_0.210513.tar.gz", type="source", repos=NULL,INSTALL_opts = '--no-lock')
library(FactorModels)
latUpdateOnefct2<- function(th,udata,nq,xl,wl,family) {
n=dim(udata)[1]
d=dim(udata)[2]
nq=length(xl)
out=.Fortran("latupdate2",as.double(th),as.integer(n),as.integer(d),
as.double(udata),as.integer(nq),as.double(xl),as.double(wl),
as.integer(family),
lat=as.double(rep(0,n)))
return(out$lat)
}
lat_update=latUpdateOnefct2(th=mlpx1,udata=udata,
nq=25,xl=xl,wl=wl,family=fam)
proxyNew2=uscore(lat_update)
library(devtools)
load_all()
document
document()
